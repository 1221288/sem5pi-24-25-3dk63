@startuml

interface Phase {
    + start(): Phase
    + open(): Phase
    + close(): Phase
    + isOpen(): boolean
    + hasStarted(): boolean
}

class PhaseStatus {
    - isOpen: boolean
    - hasStarted: boolean
    + isOpen(): boolean
    + hasStarted(): boolean
    + open(): PhaseStatus
    + close(): PhaseStatus
    + start(): PhaseStatus
}

class ChangePhaseStatusUI {
    - controller: ChangePhaseStatusController
    - configurationRepository: ConfigurationRepository
    + doShow(): boolean
    + headline(): String
    + listAndChooseJobOffer(): JobOffer
    + choosePhaseToOpenOrClose(configuration: Configuration): void
}

class ChangePhaseStatusController {
    - jobOfferRepository: JobOfferRepository
    - configurationRepository: ConfigurationRepository
    + getJobOffers(): List<JobOffer>
    + getConfigurationFromJobOffer(jobOffer: JobOffer): Configuration
    + openPhase(configuration: Configuration): void
    + closePhase(configuration: Configuration): void
    - choosePhase(configuration: Configuration): Phase
}

class Configuration {
    - id: Long
    - reference: Reference
    - applicationPhase: ApplicationPhase
    - screeningPhase: ScreeningPhase
    - interviewPhase: InterviewPhase
    - analysisPhase: AnalysisPhase
    - resultPhase: ResultPhase
    + Configuration()
    + Configuration(reference: Reference, applicationPhase: ApplicationPhase, interviewPhase: InterviewPhase, screeningPhase: ScreeningPhase, resultPhase: ResultPhase, analysisPhase: AnalysisPhase)
    + Configuration(reference: Reference, applicationPhase: ApplicationPhase, screeningPhase: ScreeningPhase, resultPhase: ResultPhase, analysisPhase: AnalysisPhase)
    + openPhase(phase: Phase): void
    + closePhase(phase: Phase): void
    + startPhase(phase: Phase): void
    + canOpenPhase(phase: Phase): boolean
    + isPhaseOpen(phase: Phase): boolean
    + sameAs(other: Object): boolean
    + identity(): Reference
}

class ApplicationPhase {
    - applicationPeriod: Period
    - status: PhaseStatus
}

class ScreeningPhase {
    - screeningPeriod: Period
    - status: PhaseStatus
}

class InterviewPhase {
    - interviewPeriod: Period
    - status: PhaseStatus
}

class AnalysisPhase {
    - analysisPeriod: Period
    - status: PhaseStatus
}

class ResultPhase {
    - resultPeriod: Period
    - status: PhaseStatus
}

interface ConfigurationRepository {
    + findByReference(reference: Reference): Iterable<Configuration>
}

interface JobOfferRepository {
    + findAllByManager(managerEmail: String): Iterable<JobOffer>
    + findByReference(reference: Reference): Iterable<JobOffer>
    + findAllByCreationDate(creationDate: LocalDateTime): List<JobOffer>
    + findAllByCompany(company: Company): List<JobOffer>
}

class JpaConfigurationRepository {
    - reference: String
    + findByReference(reference: Reference): Iterable<Configuration>
}

class JpaJobOfferRepository {
    - reference: String
    + findAllByManager(managerEmail: String): Iterable<JobOffer>
    + findByReference(reference: Reference): Iterable<JobOffer>
    + findAllByCreationDate(creationDate: LocalDateTime): List<JobOffer>
    + findAllByCompany(company: Company): List<JobOffer>
}

ChangePhaseStatusUI --> ChangePhaseStatusController
ChangePhaseStatusController --> JobOfferRepository: uses
ChangePhaseStatusController --> ConfigurationRepository: uses
ChangePhaseStatusController --> Configuration: uses
Configuration --> ApplicationPhase
Configuration --> ScreeningPhase
Configuration --> InterviewPhase
Configuration --> AnalysisPhase
Configuration --> ResultPhase
ApplicationPhase --> PhaseStatus
ScreeningPhase --> PhaseStatus
InterviewPhase --> PhaseStatus
AnalysisPhase --> PhaseStatus
ResultPhase --> PhaseStatus
JpaConfigurationRepository --> ConfigurationRepository
JpaJobOfferRepository --> JobOfferRepository
Configuration --|> Phase

@enduml
